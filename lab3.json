{"paragraphs":[{"text":"%pyspark\ndatadir = \"/home/spark/Documents/spark-workshop/data/\"","dateUpdated":"Jun 22, 2016 7:54:20 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466613508096_-256309337","id":"20160622-193828_1140371561","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"Jun 22, 2016 7:38:28 PM","dateStarted":"Jun 22, 2016 7:54:20 PM","dateFinished":"Jun 22, 2016 7:54:20 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:491"},{"text":"%md\nIn this lab, you will analyze a real-world dataset -- information about startup companies. The source of this dataset is [jSONAR](http://jsonstudio.com/resources/).","dateUpdated":"Jun 22, 2016 7:54:50 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614460552_-2105388186","id":"20160622-195420_1550560682","result":{"code":"SUCCESS","type":"HTML","msg":"<p>In this lab, you will analyze a real-world dataset &ndash; information about startup companies. The source of this dataset is <a href=\"http://jsonstudio.com/resources/\">jSONAR</a>.</p>\n"},"dateCreated":"Jun 22, 2016 7:54:20 PM","dateStarted":"Jun 22, 2016 7:54:45 PM","dateFinished":"Jun 22, 2016 7:54:45 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:492"},{"text":"%md\n#### Task 1: Inspecting the Data\n\nThis time, the data is provided as a JSON document, one entry per line. You can find it in `~/data/companies.json`. Take a look at the first entry by using the following command:\n\n```\nhead -n 1 ~/data/companies.json\n```\n\nAs you can see, the schema is fairly complicated -- it has a bunch of fields, nested objects, arrays, and so on. It describes the company's products, key people, acquisition data, and more. We are going to use Spark SQL to infer the schema of this JSON document, and then issue queries using a natural SQL syntax.\n","dateUpdated":"Jun 22, 2016 7:55:11 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614485229_175265376","id":"20160622-195445_967548395","result":{"code":"SUCCESS","type":"HTML","msg":"<h4>Task 1: Inspecting the Data</h4>\n<p>This time, the data is provided as a JSON document, one entry per line. You can find it in <code>~/data/companies.json</code>. Take a look at the first entry by using the following command:</p>\n<pre><code>head -n 1 ~/data/companies.json\n</code></pre>\n<p>As you can see, the schema is fairly complicated &ndash; it has a bunch of fields, nested objects, arrays, and so on. It describes the company's products, key people, acquisition data, and more. We are going to use Spark SQL to infer the schema of this JSON document, and then issue queries using a natural SQL syntax.</p>\n"},"dateCreated":"Jun 22, 2016 7:54:45 PM","dateStarted":"Jun 22, 2016 7:55:07 PM","dateFinished":"Jun 22, 2016 7:55:07 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:493"},{"text":"%md\n#### Task 2: Parsing the Data\n\nOpen a PySpark shell (by running `bin/pyspark` from the Spark installation directory in a terminal window). Note that you have access to a pre-initialized `SQLContext` object named `sqlContext`.\n\nCreate a `DataFrame` from the JSON file so that its schema is automatically inferred, print out the resulting schema, and register it as a temporary table called \"companies\".","dateUpdated":"Jun 22, 2016 7:55:54 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614507907_-1337536650","id":"20160622-195507_1922011417","result":{"code":"SUCCESS","type":"HTML","msg":"<h4>Task 2: Parsing the Data</h4>\n<p>Open a PySpark shell (by running <code>bin/pyspark</code> from the Spark installation directory in a terminal window). Note that you have access to a pre-initialized <code>SQLContext</code> object named <code>sqlContext</code>.</p>\n<p>Create a <code>DataFrame</code> from the JSON file so that its schema is automatically inferred, print out the resulting schema, and register it as a temporary table called &ldquo;companies&rdquo;.</p>\n"},"dateCreated":"Jun 22, 2016 7:55:07 PM","dateStarted":"Jun 22, 2016 7:55:51 PM","dateFinished":"Jun 22, 2016 7:55:51 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:494"},{"text":"%md\nFirst, let's talk about the money; figure out what the average acquisition price was.","dateUpdated":"Jun 22, 2016 7:56:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614541745_-1460995075","id":"20160622-195541_1858300459","result":{"code":"SUCCESS","type":"HTML","msg":"<p>First, let's talk about the money; figure out what the average acquisition price was.</p>\n"},"dateCreated":"Jun 22, 2016 7:55:41 PM","dateStarted":"Jun 22, 2016 7:56:09 PM","dateFinished":"Jun 22, 2016 7:56:09 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:495"},{"text":"%md\nNot too shabby. Let's get some additional detail -- print the average acquisition price grouped by number of years the company was active.","dateUpdated":"Jun 22, 2016 7:56:39 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614569864_-1660063498","id":"20160622-195609_1684283594","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Not too shabby. Let's get some additional detail &ndash; print the average acquisition price grouped by number of years the company was active.</p>\n"},"dateCreated":"Jun 22, 2016 7:56:09 PM","dateStarted":"Jun 22, 2016 7:56:35 PM","dateFinished":"Jun 22, 2016 7:56:35 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:496"},{"text":"%md\nFinally, let's try to figure out the relationship between the company's total funding and acquisition price. In order to do that, you'll need a UDF (user-defined function) that, given a company, returns the sum of all its funding rounds. First, build that function and register it with the name \"total_funding\".","dateUpdated":"Jun 22, 2016 7:57:02 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614595635_595011102","id":"20160622-195635_515516439","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Finally, let's try to figure out the relationship between the company's total funding and acquisition price. In order to do that, you'll need a UDF (user-defined function) that, given a company, returns the sum of all its funding rounds. First, build that function and register it with the name &ldquo;total_funding&rdquo;.</p>\n"},"dateCreated":"Jun 22, 2016 7:56:35 PM","dateStarted":"Jun 22, 2016 7:56:59 PM","dateFinished":"Jun 22, 2016 7:56:59 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:497"},{"text":"%md\nTest your function by retrieving the total funding for a few companies, such as Facebook, Paypal, and Alibaba. Now, find the average ratio between the acquisition price and the total funding (which, in a simplistic way, represents return on investment).","dateUpdated":"Jun 22, 2016 7:57:20 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614619041_-215823396","id":"20160622-195659_173365824","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Test your function by retrieving the total funding for a few companies, such as Facebook, Paypal, and Alibaba. Now, find the average ratio between the acquisition price and the total funding (which, in a simplistic way, represents return on investment).</p>\n"},"dateCreated":"Jun 22, 2016 7:56:59 PM","dateStarted":"Jun 22, 2016 7:57:20 PM","dateFinished":"Jun 22, 2016 7:57:20 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:498"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466614640426_1192403551","id":"20160622-195720_525813221","dateCreated":"Jun 22, 2016 7:57:20 PM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:499"}],"name":"Lab 3 - Analyzing Startup Companies","id":"2BPQDAUE9","angularObjects":{"2BPTZXB14":[],"2BMJRDTW3":[],"2BKPUUQTH":[],"2BKSECM3A":[],"2BN9ZJDBP":[],"2BKNGQUUG":[],"2BKAYKVR2":[],"2BKSAS565":[],"2BMPZT5XH":[],"2BNWNU8NC":[],"2BQ1AJWE4":[],"2BN44SKDU":[],"2BN59C6S8":[],"2BP824Q3U":[]},"config":{"looknfeel":"default"},"info":{}}